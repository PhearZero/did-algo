apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "algo-indexer.fullname" . }}
  labels:
    {{- include "algo-indexer.labels" . | nindent 4 }}
spec:
  {{- if and (eq .Values.config.mode "reader") (not .Values.autoscaling.enabled) }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "algo-indexer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "algo-indexer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "algo-indexer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "daemon"
          args:
            {{- if eq .Values.config.mode "reader" }}
            - "--no-algod"
            {{- end }}
          ports:
            - name: rpc
              containerPort: 8980
              protocol: TCP
          env:
            - name: INDEXER_POSTGRES_CONNECTION_STRING
              value: "host={{ .Values.config.postgres.host }} port={{ .Values.config.postgres.port }} user={{ .Values.config.postgres.user }} password={{ .Values.config.postgres.password }} dbname={{ .Values.config.postgres.dbname }}"
            {{- if ne .Values.config.mode "reader" }}
            - name: INDEXER_ALGOD_ADDRESS
              value: {{ required "You must provide the algod address (config.algod.address)" .Values.config.algod.address }}
            - name: INDEXER_ALGOD_TOKEN
              value: {{ required "You must provide the algod access token (config.algod.token)" .Values.config.algod.token }}
            {{- end }}
          livenessProbe:
            initialDelaySeconds: 120
            periodSeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /health
              port: rpc
          readinessProbe:
            initialDelaySeconds: 180
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /health
              port: rpc
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
